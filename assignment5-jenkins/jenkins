pipeline {

  agent none

  environment {

    def branch_git        = "master"
    def url_git           = "https://your-git-repository-url.git"
    def my_server         = "server"
    def main_path         = "/folder/jenkins"
    def status_test       = ""

  }
// chmod +x runjava.sh
    stages {
        stage('Checkout Code From Git') { 
            agent {
                label "${my_server}"
            }
            steps {
                dir("${main_path}"){
                    echo "start checkout code"
                    git branch: "${branch_git}", url: "${url_git}"
                    echo "end checkout code"
                }
            }
        }
        stage('Run Test Automate') { 
            agent {
                label "${my_server}"
            }
            steps {
                script{
                    dir("${main_path}/assignment2-automate/RobotFramework"){
                        sh "./runtest.sh | tee output.log"
                        // status_test = checkResult()
                    }
                }

            }
        }
        stage('Send Result To Jenkins') { 
            agent {
                label "${my_server}"
            }
            steps {
                echo "Result: ${status_test}"

            }
        }
    }
    post {
        success {
            echo "Test END"
        }
    }

}

def checkResult(){
    // Check for errors in output.log
    def logError = sh(script: "grep -i 'ERROR' output.log", returnStatus: true)

    // Pass if there are no errors
    if (logError != 0) {
        env.result_automate = "PASS"
        echo "${result_automate}"
    } else {
        def messageError = sh(script: "grep -i 'Retry failed' output.log", returnStdout: true).trim()
        env.result_automate = "FAIL"
        echo "${messageError}"
    }
    return "${result_automate}"
}